一、 Quartz 简介
     Quartz 是一个由 James House 创立的开源项目, 是一个功能强大的作业调度工具, 可以计划的执行任务,
定时、循环或在某一个时间来执行我们需要做的事, 这可以给我们工作上带来很大的帮助.
例如, 你的程序中需要每个月的一号导出报表、定时发送邮件或程序需要每隔一段执行某一任务……等等, 都可以用 Quartz 来解决.

    Quartz 大致可分为三个主要的核心:
    1, 调度器 Scheduler: 是一个计划调度器容器，容器里面可以盛放众多的 JobDetail 和 Trigger, 当容器启动后, 里面的每个 JobDetail 都会根据 Trigger 按部就班自动去执行.
    2, 任务 Job: 要执行的具体内容. JobDetail: 具体的可执行的调度程序, 包含了这个任务调度的方案和策略.
    3, 触发器 Trigger: 调度参数的配置, 什么时候去执行调度.

    可以这么理解它的原理: 调度器就相当于一个容器, 装载着任务和触发器.
任务和触发器又是绑定在一起的, 然而一个任务可以对应多个触发器, 但一个触发器却只能对应一个任务.
当 JobDetail 和 Trigger 在 scheduler 容器上注册后, 形成了装配好的任务作业(JobDetail 和 Trigger 所组成的一对儿), 就可以伴随容器启动而调度执行了.

二、与 spring 的整合
    在这里特别对版本作一下说明, 是因为 spring 和 quartz 的整合对版本是有要求.
spring3.1 以下的版本必须使用 quartz1.x 系列, 3.1以上的版本才支持 quartz 2.x, 不然会出错.
原因主要是: spring 对于 quartz 的支持实现, org.springframework.scheduling.quartz.CronTriggerBean
继承了 org.quartz.CronTrigger, 在 quartz1.x 系列中 org.quartz.CronTrigger 是个类,
而在 quartz2.x 系列中 org.quartz.CronTrigger 变成了接口, 从而造成无法用 spring 的方式配置 quartz 的触发器(trigger).

    在 Spring 中使用 Quartz 有两种方式实现: 第一种是任务类继承QuartzJobBean, 第二种则是在配置文件里定义任务类和要执行的方法, 类和方法可以是普通类.
第二类使用更为方便, 一般采用第二种方式.

三、cronExpression 表达式:

[秒] [分] [小时] [日] [月] [周] [年]

字段名	        必须的	允许值	            允许的特殊字符

Seconds         YES	    0-59	            , - * /

Minutes	        YES	    0-59	            , - * /

Hours	        YES	    0-23	            , - * /

Day of month    YES	    1-31	            , - * ? / L W

Month	        YES	    1-12 or JAN-DEC	    , - * /

Day of week	    YES	    1-7 or SUN-SAT	    , - * ? / L #

Year	        NO	    empty, 1970-2099	, - * /

特殊字符说明:

*   ("all values")-用于指定字段中的所有值. 比如: "*" 在分钟中表示"每一分钟".

?   ("no specific value")-用于指定日期中的某一天, 或是星期中的某一个星期.

-   用于指定范围. 比如: "10-12" 在小时中表示"10点, 11点, 12点".

,   用于指定额外的值. 比如: "MON,WED,FRI" 在日期中表示"星期一, 星期三, 星期五".

/   用于指定增量. 比如: "0/15" 在秒中表示"0秒, 15秒, 30秒, 45秒". "5/15" 在秒中表示"5秒, 20秒, 35秒, 50秒".

L   ("last")-在两个字段中拥有不同的含义. 比如: "L" 在日期(Day of month)中表示"月份的最后一天". 在星期(Day of week)中只表示"7"或"SAT".
但是, "值L" 在星期(Day of week)中表示"最后一个月的XXX天". 比如: "6L"表示"月份的最后一个星期五".
也可以在日期(Day of month)中指定一个偏移量(从该月的最后一天开始). 比如: "L-3"表示"某月的倒数第三天".
注意: 当使用'L'字符时，重要的是不要指定列表或值的范围，你会得到混乱/意外的结果。

W   ("weekday")-用于指定工作日(星期一到星期五). 比如: "15W"在日期中表示"到15号的最近一个工作日".
如果第十五号是周六, 那么触发器的触发在第十四号星期五. 如果第十五号是星期日, 触发器的触发在第十六号周一。
如果第十五是星期二， 那么它就会工作开始在第十五号周二.
然而, 如果指定"1W"并且第一号是星期六, 那么触发器的触发在第三号周一, 因为它不会'jump'超过一个月的日子的边界。
注意: 当使用'W'字符时, 只能指定该月中的一天, 而不是一个范围或列表中的天数。

"L" 和 "W" 可以在日期(day-of-month)中组合使用, 表示"月份的最后一个工作日".

#   用于指定月份中的第几天. 比如: "6#3"表示"月份的第三个星期五"(day 6 = Friday and "#3" = the 3rd one in the month).
其它的有, "2#1"表示"月份第一个星期一". "4#5"表示"月份第五个星期三".
注意: 如果只是指定"#5", 则触发器在月份中不会触发.

字符不区分大小写, MON 和 mon 相同.

实例:

0 0 12 * * ?    每天中午12点

0 15 10 ? * *   每天上午10点15分

0 15 10 * * ?   每天上午10点15分

0 15 10 * * ? * 每天上午10点15分

0 15 10 * * ? 2005  在2005年里的每天上午10点15分

0 * 14 * * ?    每天下午2点到下午2点59分的每一分钟

0 0/5 14 * * ?  每天下午2点到2点55分每隔5分钟

0 0/5 14,18 * * ?   第天下午2点到2点55分, 下午6点到6点55分, 每隔5分钟

0 0-5 14 * * ?  每天下午2点到2点5分的第一分钟

0 10,44 14 ? 3 WED  3月每周三的下午2点10分和下午2点44分

0 15 10 ? * MON-FRI 每周一到周五的上午10点15分

0 15 10 15 * ?  每月15号的上午10点15分

0 15 10 L * ?   每月最后一天的上午10点15分

0 15 10 L-2 * ? 每月最后两天的上午10点15分

0 15 10 ? * 6L  每月的最后一个星期五的上午10点15分

0 15 10 ? * 6L 2002-2005    2002年到2005年每个月的最后一个星期五的上午10点15分

0 15 10 ? * 6#3 每月的第三个星期五的上午10点15分

0 0 12 1/5 * ?  每月的1号开始每隔5天的中午12点

0 11 11 11 11 ? 每年11月11号上午11点11分

请注意 "*" 和 "?" 在日期和星期中的影响.