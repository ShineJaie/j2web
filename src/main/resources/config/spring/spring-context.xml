<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.1.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <context:property-placeholder location="classpath:/config/jdbc/jdbc.properties"/>

    <!-- Spring 自动扫描 base-package 下面或者子包下面的 java 文件，如果扫描到有
        @Component @Controller @Service 等这些注解的类，则把这些类注册为 bean -->
    <context:component-scan base-package="com.j2web.web"/>

    <!-- SpringMVC上传文件时, 需要配置MultipartResolver处理器 -->
    <!-- 这样一旦某个 Request 是一个 MultipartRequest, 它就会首先被 MultipartResolver 处理，
        然后再转发相应的 Controller -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- setting maximum upload size -->
        <!-- 指定所上传文件的总大小(单位为: Byte), 注意 maxUploadSize 属性的限制不是针对单个文件, 而是所有文件的容量之和 -->
        <!-- 设置上传文件的最大尺寸为 10MB, 1GB=1024MB=1048576KB  -->
        <property name="maxUploadSize" value="10485760"/>
        <property name="maxInMemorySize" value="100"/>
        <property name="defaultEncoding" value="UTF-8"/>
    </bean>

    <!-- AOP 实现, 打开 AspectJ 启动对 @AspectJ 注解的支持 -->
    <aop:aspectj-autoproxy/>
    <!--通知 spring 使用 cglib 而不是 jdk 的来生成代理方法 AOP 可以拦截到 Controller-->
    <aop:aspectj-autoproxy proxy-target-class="true"/>

</beans>